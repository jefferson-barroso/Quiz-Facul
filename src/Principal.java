import java.util.Scanner;

public class Principal {

	public static void main(String[] args) {
		//importações iniciais
	    Scanner sc = new Scanner(System.in);    
		
		
        
	//configurações iniciais
     System.out.println("DIGITE SEU NOME:");
     String jogador = sc.next(); 
     int pontos = 0;;
     System.out.println("");
     
		
		System.out.println("######################################################################################################################################################");
		System.out.println("########################################################################----MM########################################################################");
		System.out.println("####################################################################mm----------######################################################################");
		System.out.println("##################################################################----------------@@##################################################################");
		System.out.println("##############################################################mm----------------------################################################################");
		System.out.println("################################################################::------------------##################################################################");
		System.out.println("########################################################--########----------------########::mm########################################################");
		System.out.println("##################################################@@------##########------------@@########------mm####################################################");
		System.out.println("##############################################::----------mm########MM--------++##########----------::################################################");
		System.out.println("############################################::--------------##########--------##########----------------##############################################");
		System.out.println("############################################mm--------------mm########MM----++########@@--------------::##############################################");
		System.out.println("##############################################----------------##########----##########----------------++##############################################");
		System.out.println("##############################################----------------::########::--########++----------------MM##############################################");
		System.out.println("##############################################------------------mm########MM########------------------MM##############################################");
		System.out.println("##############################################--------------------@@##############--------------------@@##############################################");
		System.out.println("##############################################::++##############::::@@##########::::##############MM::################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("####################################################################MM########@@######################################################################");
		System.out.println("##############################################......########........############........########......################################################");
		System.out.println("##############################################....................########MM######....................MM##############################################");
		System.out.println("##############################################..................########@@--########..................MM##############################################");
		System.out.println("############################################@@................--########....########mm................mm##############################################");
		System.out.println("############################################MM................##########....MM########................--##############################################");
		System.out.println("############################################++..............mm########::......##########................##############################################");
		System.out.println("############################################................##########........##########................##############################################");
		System.out.println("##############################################MM--........mm########--..........##########..........mm################################################");
		System.out.println("####################################################......########@@............++########......######################################################");
		System.out.println("########################################################::########................MM######..##########################################################");
		System.out.println("################################################################....................##################################################################");
		System.out.println("##############################################################@@....................mm################################################################");
		System.out.println("##################################################################::..............####################################################################");
		System.out.println("####################################################################@@........++######################################################################");
		System.out.println("########################################################################....##########################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("######################################################################################################################################################");
		System.out.println("@@@@@@######@@@@######@@@@######@@@@######@@@@########@@@@@@@@@@####@@@@@@@@@@@@####@@@@@@@@@@########@@@@################@@@@@@############@@@@@@@@##");
		System.out.println("@@@@@@######@@@@######@@@@@@####@@@@####@@@@@@######@@@@@@@@@@@@####@@@@@@@@@@@@####@@@@@@@@@@@@@@####@@@@################@@@@@@##########@@@@@@@@@@@@");
		System.out.println("@@@@@@######@@@@######@@@@@@####@@@@####@@@@@@####@@@@@@############@@@@############@@@@######@@@@####@@@@################@@@@@@########@@@@@@########");
		System.out.println("@@@@@@######@@@@######@@@@@@@@##@@@@####@@@@@@####@@@@##############@@@@############@@@@######@@@@@@##@@@@##############@@@@##@@@@######@@@@##########");
		System.out.println("@@@@@@######@@@@######@@@@@@@@##@@@@####@@@@@@####@@@@##############@@@@@@@@@@######@@@@######@@@@####@@@@##############@@@@##@@@@######@@@@##########");
		System.out.println("@@@@@@######@@@@######@@@@@@@@##@@@@####@@@@@@####@@@@##############@@@@@@@@@@######@@@@@@@@@@@@@@####@@@@############@@@@@@##@@@@####@@@@@@##########");
		System.out.println("@@@@@@######@@@@######@@@@##@@@@@@@@####@@@@@@####@@@@##############@@@@############@@@@@@@@@@@@######@@@@############@@@@####@@@@@@##@@@@@@##########");
		System.out.println("@@@@@@######@@@@######@@@@##@@@@@@@@####@@@@@@####@@@@##############@@@@############@@@@##############@@@@############@@@@@@@@@@@@@@####@@@@##########");
		System.out.println("@@@@@@######@@@@######@@@@####@@@@@@####@@@@@@####@@@@@@############@@@@############@@@@##############@@@@############@@@@@@@@@@@@@@####@@@@##########");
		System.out.println("##@@@@@@##@@@@@@######@@@@####@@@@@@####@@@@@@######@@@@@@####@@####@@@@@@@@@@@@####@@@@##############@@@@@@@@@@@@##@@@@@@######@@@@@@##@@@@@@######@@");
		System.out.println("##@@@@@@@@@@@@########@@@@######@@@@####@@@@@@########@@@@@@@@@@@@##@@@@@@@@@@@@####@@@@##############@@@@@@@@@@@@##@@@@##########@@@@####@@@@@@@@@@@@");
		System.out.println("");
		System.out.println("");
		 	System.out.println("######   #######  ##   ##           ##   ##   ######  ##   ##  #####     #####    #####              ###     #####              ###    ##   ##   ######  #######");
		 	System.out.println(" ##  ##   ##   #  ### ###           ##   ##     ##    ###  ##   ## ##   ### ###  ##   ##            ## ##   ### ###            ## ##   ##   ##     ##    ##  ##");
		 	System.out.println(" ##  ##   ##      #######           ##   ##     ##    #### ##   ##  ##  ##   ##  ##                ##   ##  ##   ##           ##   ##  ##   ##     ##       ##");
	        System.out.println(" #####    ####    ## # ##            ## ##      ##    #######   ##  ##  ##   ##   #####            ##   ##  ##   ##           ##   ##  ##   ##     ##      ##");
	        System.out.println(" ##  ##   ##      ##   ##            ## ##      ##    ## ####   ##  ##  ##   ##       ##           #######  ##   ##           ##   ##  ##   ##     ##     ##");
	        System.out.println(" ##  ##   ##   #  ##   ##             ###       ##    ##  ###   ## ##   ### ###  ##   ##           ##   ##  ### ###            ## ##   ##   ##     ##    ##   ##");
	        System.out.println("######   #######  ### ###             ###     ######  ##   ##  #####     #####    #####            ##   ##   #####              ####    #####    ######  #######");
	        System.out.println("                                                                                                                                   ##");
	        System.out.println("                              _.--\"\"-._                     ");
	        System.out.println("  .                         .\"         \".                   ");
	        System.out.println(" / \\    ,^.         /(     Y             |      )\\          ");
	        System.out.println("/   `---. |--'\\    (  \\__..'--   -   -- -'\"\"-.-'  )         ");
	        System.out.println("|        :|    `&gt;   '.     l_..-------.._l      .'          ");
	        System.out.println("|      __l;__ .'      \"-.____.||_.-'v'-._||`\"----\"            ");
	        System.out.println(" \\  .-' | |  `              l._       _.'                   ");
	        System.out.println("  \\/    | |                   l`^^'^^'j                     ");
	        System.out.println("        | |                _   \\_____/     _                ");
	        System.out.println("        j |               l `--__)-'(__.--' |               ");
	        System.out.println("        | |               | /`---``-----'\"1 |  ,-----.      ");
	        System.out.println("        | |               )/  `--' '---'   \\'-'  ___  `-.   ");
	        System.out.println("      _ L |_            //  `-.-.'`-----'  /  ,-'   I`.  \\  ");
	        System.out.println("     '._' / \\         _/(   `/   )- ---' ;  /__.J   L.__.\\ :");
	        System.out.println("      `._;/7(-.......'  /        ) (     |  |            | |");
	        System.out.println("      `._;l _'--------_/        )-'/     :  |___.    _._./ ;");
	        System.out.println("        | |                 .__ )-'\\  __  \\  \\  I   1   / / ");
	        System.out.println("        `-'                /   `-'-(-'   \\ \\  `.|   | ,' /  ");
	        System.out.println("                           \\__  `-'    __/  `-. `---'',-'   ");
	        System.out.println("                              )-._.-- (        `-----'      ");
	        System.out.println("                             )(  l\\ o ('..-.                ");
	        System.out.println("                       _..--' _'-' '--'.-. |                ");
	        System.out.println("                __,,-'' _,,-''            \\ \\               ");
	        System.out.println("               f'. _,,-'                   \\ \\              ");
	        System.out.println("              ()--  |                       \\ \\             ");
	        System.out.println("                \\   |                       /  \\            ");
	        System.out.println("                  \\  \\                     |._  |           ");
	        System.out.println("                   \\  \\                    |  ()|           ");
	        System.out.println("                    \\  \\                   \\  /            ");
	        System.out.println("                     ) `-.                  | |            ");
	        System.out.println("                    // .__)                 | |            ");
	        System.out.println("                 _.//7'                     | |            ");
	        System.out.println("               '---'                         j_| `          ");
	        System.out.println("                                            (| |            ");
	        System.out.println("                                             |  \\           ");
	        System.out.println("                                             |lllj          ");
	        System.out.println("                                             |||||          ");

	        
	        System.out.println("===============================================================================================");
	        System.out.println("MODO DE JOGO: \r\n"
	        				+ "1 - DIFICULDADE PROGRESSIVA \r\n"
	        				+ "2 - ESCOLHER DIFICULDADE");
	        System.out.println("===============================================================================================");
	        int escolha = sc.nextInt();
	     
	        
	        if(escolha==1) {
	        System.out.println("");
	        System.out.println("Ola " + jogador);
	        System.out.println("Quantidade de pontos: " + pontos);
	        System.out.println("");
	        
	        //CODEM A PARTIR DAQUI
	        System.out.println("1. Qual sistema numérico é usado pelos computadores?\r\n"
	        		+ "   1) Binario\r\n"
	        		+ "   2) Decimal\r\n"
	        		+ "   3) Octal\r\n"
	        		+ "   4) Hexadecimal\r\n"
	        		+ "   5) Ternario"); 
	        int alternativa1 = sc.nextInt(); 
	        
	        switch(alternativa1) {
	        case 1:
	        	pontos = pontos + 5; 
	        	System.out.println("VOCE ACERTOU");
	        	System.out.println("Total de pontos: " + pontos);
	        	break; 
	        case 2:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        case 3:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        case 4:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        case 5:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        default:
	        	System.out.println("digite uma opcao valida");
	        	return;
	        }
	        
	        System.out.println("2. Quantos dígitos possui o sistema binário?\r\n"
	        		+ "1) 2\r\n"
	        		+ "2) 4\r\n"
	        		+ "3) 8\r\n"
	        		+ "4) 10\r\n"
	        		+ "5) 16\r\n"); 
	        int alternativa2 = sc.nextInt(); 
	        
	        switch(alternativa2) {
	        case 1:
	        	pontos = pontos + 5; 
	        	System.out.println("VOCE ACERTOU");
	        	System.out.println("Total de pontos: " + pontos);
	        	break; 
	        case 2:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        case 3:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        case 4:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        case 5:
	        	System.out.println("VOCE ERROU!");
	        	break;
	        default:
	        	System.out.println("digite uma opcao valida");
	        	return;
	        }
	        
	     // Pergunta 3
	        System.out.println("3. Qual é a base do sistema octal?\r\n"
	                + "1) 2\r\n"
	                + "2) 4\r\n"
	                + "3) 8\r\n"
	                + "4) 10\r\n"
	                + "5) 16\r\n");
	        int alternativa3 = sc.nextInt();

	        switch(alternativa3) {
	            case 3:
	                pontos += 5;
	                System.out.println("VOCE ACERTOU");
	                System.out.println("Total de pontos: " + pontos);
	                break;
	            case 1: case 2: case 4: case 5:
	                System.out.println("VOCE ERROU!");
	                break;
	            default:
	                System.out.println("digite uma opcao valida");
	                return;
	        }

	        // Pergunta 4
	        System.out.println("4. Quantos dígitos tem um número hexadecimal?\r\n"
	                + "1) 4\r\n"
	                + "2) 6\r\n"
	                + "3) 8\r\n"
	                + "4) 10\r\n"
	                + "5) 16\r\n");
	        int alternativa4 = sc.nextInt();

	        switch(alternativa4) {
	            case 5:
	                pontos += 5;
	                System.out.println("VOCE ACERTOU");
	                System.out.println("Total de pontos: " + pontos);
	                break;
	            case 1: case 2: case 3: case 4:
	                System.out.println("VOCE ERROU!");
	                break;
	            default:
	                System.out.println("digite uma opcao valida");
	                return;
	        }

	        // Pergunta 5
	        System.out.println("5. Qual é o valor decimal do número binário 1010?\r\n"
	                + "1) 4\r\n"
	                + "2) 5\r\n"
	                + "3) 8\r\n"
	                + "4) 10\r\n"
	                + "5) 12\r\n");
	        int alternativa5 = sc.nextInt();

	        switch(alternativa5) {
	            case 4:
	                pontos += 5;
	                System.out.println("VOCE ACERTOU");
	                System.out.println("Total de pontos: " + pontos);
	                break;
	            case 1: case 2: case 3: case 5:
	                System.out.println("VOCE ERROU!");
	                break;
	            default:
	                System.out.println("digite uma opcao valida");
	                return;
	        }

	        // Pergunta 6
	        System.out.println("6. Quantos dígitos o sistema decimal possui?\r\n"
	                + "1) Infinitos\r\n"
	                + "2) 8\r\n"
	                + "3) 10\r\n"
	                + "4) 12\r\n"
	                + "5) 16\r\n");
	        int alternativa6 = sc.nextInt();

	        switch(alternativa6) {
	            case 3:
	                pontos += 5;
	                System.out.println("VOCE ACERTOU");
	                System.out.println("Total de pontos: " + pontos);
	                break;
	            case 1: case 2: case 4: case 5:
	                System.out.println("VOCE ERROU!");
	                break;
	            default:
	                System.out.println("digite uma opcao valida");
	                return;
	        }

	        // Pergunta 7
	        System.out.println("7. Qual é o sistema numérico que utiliza os dígitos de 0 a 9 e as letras de A a Z?\r\n"
	                + "1) Alfanumérico\r\n"
	                + "2) Octal\r\n"
	                + "3) Binário\r\n"
	                + "4) Hexadecimal\r\n"
	                + "5) Decimal\r\n");
	        int alternativa7 = sc.nextInt();

	        switch(alternativa7) {
	            case 4:
	                pontos += 5;
	                System.out.println("VOCE ACERTOU");
	                System.out.println("Total de pontos: " + pontos);
	                break;
	            case 1: case 2: case 3: case 5:
	                System.out.println("VOCE ERROU!");
	                break;
	            default:
	                System.out.println("digite uma opcao valida");
	                return;
	        }

	        // Pergunta 8
	        System.out.println("8. Qual é o valor decimal do número hexadecimal '1B'?\r\n"
	                + "1) 25\r\n"
	                + "2) 26\r\n"
	                + "3) 27\r\n"
	                + "4) 28\r\n"
	                + "5) 29\r\n");
	        int alternativa8 = sc.nextInt();

	        switch(alternativa8) {
	            case 1:
	                pontos += 5;
	                System.out.println("VOCE ACERTOU");
	                System.out.println("Total de pontos: " + pontos);
	                break;
	            case 2: case 3: case 4: case 5:
	                System.out.println("VOCE ERROU!");
	                break;
	            default:
	                System.out.println("digite uma opcao valida");
	                return;
	        }
	        System.out.println("Parabens " + jogador + " Você conseguiu " + pontos + " pontos do total de 40 pontos");
	        
	        }
	        
	        else {
	        	System.out.println("AINDA NÃO IMPLEMENTADO");
	        }
	        
    }
	        
	        
	        
	        
	        
	        
	        
	        
	        
	        
	        
	 
	        
	}


	  


